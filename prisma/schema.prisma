// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id             Int              @id @default(autoincrement())
  user_username       String           @unique
  user_password       String
  user_diet_plan      DietPlan?
  user_customizedmeal CustomizedMeal[]
  user_meal_plan      MealPlan[]
  user_progress       Progress[]
  user_bio_data       BioData?
}

model BioData {
  biodata_id                  Int      @id @default(autoincrement())
  biodata_age                 Int      @default(0)
  biodata_user                User     @relation(fields: [biodata_user_id], references: [user_id], onDelete: Cascade)
  biodata_user_id             Int      @unique
  biodata_email               String   @unique
  biodata_gender              Gender   @default(male)
  biodata_weight              Float    @default(0)
  biodata_desired_calorie     Int      @default(0)
  biodata_height              Float    @default(0)
  biodata_activity            Activity @default(sedentary)
  biodata_goals               String[]
  biodata_carbohydrates_ratio Int      @default(0)
  biodata_proteins_ratio      Int      @default(0)
  biodata_fats_ratio          Int      @default(0)
}

enum Gender {
  male
  female
}

enum Activity {
  sedentary
  lightly_active
  moderately_active
  very_active
  extra_active
}

model DietPlan {
  dietplan_id                      Int        @id @default(autoincrement())
  dietplan_type                    DietType
  dietplan_description             String
  dietplan_calorieIntake           Int
  dietplan_carbohydratesPercentage Float
  dietplan_proteinsPercentage      Float
  dietplan_fatsPercentage          Float
  dietplan_mainMeals               Int
  dietplan_snacks                  Int
  dietplan_user                    User       @relation(fields: [dietplan_user_id], references: [user_id], onDelete: Cascade)
  dietplan_user_id                 Int        @unique
  dietplan_meal_plan               MealPlan[]
  diet_plan_food                   Food[]
}

enum DietType {
  Balanced
  LowCarb
  HighProtein
}

model Food {
  food_id              Int              @id @default(autoincrement())
  food_nix_api_id      String           @unique
  food_name            String
  food_calories        Float
  food_carbohydrates   Float
  food_proteins        Float
  food_fats            Float
  food_vitamins        String[]
  food_customized_meal CustomizedMeal[]
  food_diet_plan       DietPlan         @relation(fields: [food_diet_plan_id], references: [dietplan_id], onDelete: Cascade)
  food_diet_plan_id    Int
}

model CustomizedMeal {
  customizedmeal_id            Int       @id @default(autoincrement())
  customizedmeal_user          User      @relation(fields: [customizedmeal_user_id], references: [user_id], onDelete: Cascade)
  customizedmeal_user_id       Int
  customizedmeal_food          Food      @relation(fields: [customizedmeal_food_id], references: [food_id], onDelete: Cascade)
  customizedmeal_food_id       Int
  customizedmeal_portion_size  Float
  customizedmeal_meal_plan     MealPlan? @relation(fields: [customized_meal_meal_plan_id], references: [mealplan_id], onDelete: Cascade)
  customized_meal_meal_plan_id Int?
}

model MealPlan {
  mealplan_id                   Int              @id @default(autoincrement())
  mealplan_user                 User             @relation(fields: [mealplan_user_id], references: [user_id], onDelete: Cascade)
  mealplan_user_id              Int
  mealplan_diet_plan            DietPlan         @relation(fields: [mealplan_diet_plan_id], references: [dietplan_id], onDelete: Cascade)
  mealplan_diet_plan_id         Int
  mealplan_day_of_Week          String
  mealplan_mealtime             String
  mealplan_customizedMeal       CustomizedMeal[]
  mealplan_saved                SavedMealPlan?   @relation(fields: [savedMealPlanSavedmealplan_id], references: [savedmealplan_id])
  savedMealPlanSavedmealplan_id Int?
}

model SavedMealPlan {
  savedmealplan_id Int        @id @default(autoincrement())
  savedMealPlan    MealPlan[]
}

model Progress {
  progress_id           Int      @id @default(autoincrement())
  progress_user         User     @relation(fields: [progress_user_id], references: [user_id], onDelete: Cascade)
  progress_user_id      Int
  progress_weight       Float
  progress_measurements String[]
}
